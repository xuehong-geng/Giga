<?xml version="1.0" encoding="utf-8" ?>
<!--本配置用于设置Transformer进行文件格式处理的参数和模版-->
<Giga.Transformer>
  <Parsers>
    <!--目前仅仅支持Excel2007以上版本的文件解析-->
    <Parser name="ExcelParser" type="Giga.Transformer.Excel.ExcelParser"/>
  </Parsers>

  <Templates>
    <!--
    模版用来定义数据实体如何从文件中取出。每个模版都有一个名称，要唯一，但没有什么实际的作用，仅仅是在解析时向系统指明用哪个模版而已。
    parser属性用来指定该模版所用的解析器，在<Parsers>中找。
    -->
    <Template name="TestNormalTabularData_FixedRange" parser="ExcelParser">
      <!--每个模版都是以Collections开始的。一个Collection代表一个数据实体的集合。-->
      <Collections>
        <Collection name="TabularData"
                          range="Sheet1!A4:J20"
                          orientation="vertical">
          <!--
          Collection的名称没有什么作用，仅为区分不同的Collection。
          range用来指明集合的单元格范围。遵照Excel的规范。可以是开放式的，比如：A1:B。当为开放式range时，系统自动扩展到Worksheet
          的边界。
          orientation用来指明集合中数据的排列方向，缺省是vertical（纵向）。
          ItemTemplate用于表示集合中的元素模版
          -->
          <ItemTemplate>
            <!--
            Entity说明每个元素是如何排列的。
            Entity的range列明一个元素的单元格范围，其地址是相对于Collection的左上角的。比如：Collection是B2:E10, Entity的range
            是A1:C2, 则表示第一个Entity的实际范围是B2:D3，即3x2的range。
            每个Entity的range之间不能有空隙！！！如果需要有留白，应利用Entity的Field的相对range来处理。
            当allowNull为false时，系统读到空的Entity数据时就终止读取。
            -->
            <Entity range="A1:J1" allowNull="false">
              <!--Entity的数据通过属性名来绑定。Field定义了绑定关系。Field的range相对于Entity的range-->
              <Fields>
                <!--属性值的读取由系统根据实体的类型来自动转换，如转换失败会抛异常。-->
                <Field name="PO" range="A1" />
                <Field name="Item" range="B1" />
                <Field name="ProductCode" range="C1" />
                <Field name="ProductName" range="D1"/>
                <Field name="Weight" range="E1" />
                <Field name="Qty" range="F1" />
                <Field name="UnitPrice" range="G1"/>
                <Field name="Total" range="H1"/>
                <Field name="PODate" range="I1"/>
                <Field name="DueDate" range="J1"/>
              </Fields>
            </Entity>
          </ItemTemplate>
        </Collection>
      </Collections>
    </Template>

    <Template name="TestNormalTabularData_DynamicRange" parser="ExcelParser">
      <Collections>
        <Collection name="TabularData"
                          range="Sheet1!A4:J"
                          orientation="vertical"
                          endBefore="END_OF_DATA"
                    >
          <!--
          Collection的endBefore属性用于表明数据集合的结束，通常和开放式的Collection Range配合使用。
          endBefore中的值为excel命名单元格，这样可以有效地在运行时找到数据的结尾。
          -->
          <ItemTemplate>
            <Entity range="A1:J1" allowNull="true">
              <Fields>
                <Field name="PO" range="A1" />
                <Field name="Item" range="B1" />
                <Field name="ProductCode" range="C1" />
                <Field name="ProductName" range="D1"/>
                <Field name="Weight" range="E1" />
                <Field name="Qty" range="F1" />
                <Field name="UnitPrice" range="G1"/>
                <Field name="Total" range="H1"/>
                <Field name="PODate" range="I1"/>
                <Field name="DueDate" range="J1"/>
              </Fields>
            </Entity>
          </ItemTemplate>
        </Collection>
      </Collections>
    </Template>

    <Template name="RdPurchaseOrder" parser="ExcelParser">
      <Collections>
        <Collection name="RdPo"
                          range="'SG Purchase Order'!$A$2:$AO"
                          orientation="vertical"
                    >
          <ItemTemplate>
            <Entity range="A1:AO" allowNull="false">
              <Fields>
                <Field name="Id" range="PO_NUMBER" />
                <!--当Field的range是个命名单元格时，系统将使用Excel文件中记录的实际地址来读取数据。-->
                <Field name="Version" range="$H$16" />
                <!--当Field的range是绝对地址时，系统将不会根据Collection和Entity的地址作偏移。-->
                <Field name="ShipTo" range="SHIP_TO" />
                <Field name="ExtPo" range="$AC$16"/>
                <Field name="PoDate" range="PO_DATE" />
                <Field name="Payment" range="PAYMENT" />
                <Field name="Delivery" range="DELIVERY"/>
                <Field name="IncoTerms" range="INCOTERMS"/>
                <Field name="AdditionalNotes" range="END_OF_ITEMS#1,5"/>
                <!--
                在Form嵌套表格的情况下，在表格后面的字段的实际地址是变化的。因此系统使用命名单元格+偏移量的方式
                来配置这些字段的地址。
                上例中：END_OF_ITEMS是嵌套表格的结束标志单元格的名称；1代表向右偏1个单元格；5代表向下偏5个单元格。
                -->
                <Field name="Currency" range="$AL$24"/>
              </Fields>
              <!--通过在Entity中嵌套Collection的定义来实现对子对象集合的处理-->
              <Collections>
                <!--Collection的名称对应子对象集合属性名-->
                <Collection name="Items" 
                            range="A28:AO"
                            endBefore="END_OF_ITEMS" 
                            orientation="vertical">
                  <ItemTemplate>
                    <Entity range="A1:AO1" allowNull="false">
                      <Fields>
                        <Field name="ExwDate" range="C1"/>
                        <Field name="LineNumber" range="H1"/>
                        <Field name="Part" range="L1"/>
                        <Field name="Description" range="R1"/>
                        <Field name="Qty" range="AE1"/>
                        <Field name="UnitPrice" range="AH1"/>
                        <Field name="TotalPrice" range="AL1"/>
                      </Fields>
                    </Entity>
                  </ItemTemplate>
                </Collection>
              </Collections>
            </Entity>
          </ItemTemplate>
        </Collection>
      </Collections>
    </Template>

  </Templates>
  </Giga.Transformer>